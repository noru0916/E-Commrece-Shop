[{"C:\\Users\\User\\PhpstormProjects\\shope\\src\\index.js":"1","C:\\Users\\User\\PhpstormProjects\\shope\\src\\App.jsx":"2","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Products\\Product\\styles.js":"4","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Products\\Product\\Product.jsx":"5","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\NavBar\\styles.js":"6","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\index.js":"7","C:\\Users\\User\\PhpstormProjects\\shope\\src\\lib\\commerce.js":"8","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\NavBar\\NavBar.jsx":"9","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\Cart.jsx":"10","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\styles.js":"11","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\CartItem\\CartItem.jsx":"12","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\styles.js":"14","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\Checkout.jsx":"15","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\AddressForm\\AddressForm.jsx":"16","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\AddressForm\\FormInput.jsx":"17"},{"size":145,"mtime":1606624881977,"results":"18","hashOfConfig":"19"},{"size":1864,"mtime":1606644761120,"results":"20","hashOfConfig":"19"},{"size":697,"mtime":1606635064634,"results":"21","hashOfConfig":"19"},{"size":331,"mtime":1606630594612,"results":"22","hashOfConfig":"19"},{"size":1263,"mtime":1606635065220,"results":"23","hashOfConfig":"19"},{"size":1565,"mtime":1606631479043,"results":"24","hashOfConfig":"19"},{"size":112,"mtime":1606631661106,"results":"25","hashOfConfig":"19"},{"size":145,"mtime":1606632857456,"results":"26","hashOfConfig":"19"},{"size":1516,"mtime":1606640903439,"results":"27","hashOfConfig":"19"},{"size":2097,"mtime":1606643302217,"results":"28","hashOfConfig":"19"},{"size":570,"mtime":1606636754908,"results":"29","hashOfConfig":"19"},{"size":1483,"mtime":1606642974173,"results":"30","hashOfConfig":"19"},{"size":333,"mtime":1606637283301,"results":"31","hashOfConfig":"19"},{"size":1158,"mtime":1606643846108,"results":"32","hashOfConfig":"19"},{"size":2063,"mtime":1606655162419,"results":"33","hashOfConfig":"19"},{"size":5394,"mtime":1606655304391,"results":"34","hashOfConfig":"19"},{"size":487,"mtime":1606646434139,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"r7mpnq",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\PhpstormProjects\\shope\\src\\index.js",["72"],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\App.jsx",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\NavBar\\styles.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\index.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\lib\\commerce.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\NavBar\\NavBar.jsx",["73","74"],"import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Badge,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport logo from \"../../assests/commerse.jfif\";\n\nconst NavBar = ({ totalItems }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  return (\n    <>\n      <AppBar position={\"fixed\"} className={classes.appBar} color={\"inherit\"}>\n        <Toolbar>\n          <Typography\n            variant={\"h6\"}\n            className={classes.title}\n            color={\"inherit\"}\n            component={Link}\n            to={\"/\"}\n          >\n            <img\n              src={logo}\n              alt={\"Commerce.js\"}\n              height={\"25px\"}\n              className={classes.image}\n            />\n            Commerce.js\n          </Typography>\n          <div className={classes.grow} />\n          {location.pathname === \"/\" && (\n            <div className={classes.button}>\n              <IconButton\n                component={Link}\n                to={\"/cart\"}\n                aria-label={\"Show card items\"}\n                color={\"inherit\"}\n              >\n                <Badge badgeContent={totalItems} color={\"secondary\"}>\n                  <ShoppingCart />\n                </Badge>\n              </IconButton>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default NavBar;\n","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\styles.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\styles.js",[],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\Checkout.jsx",["75","76","77","78","79"],"C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\AddressForm\\AddressForm.jsx",["80","81"],"import React, { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { commerce } from \"../../../lib/commerce\";\nimport FormInput from \"./FormInput\";\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region }\n    );\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) {\n      fetchSubdivisions(shippingCountry);\n    }\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) {\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n    }\n  }, [shippingSubdivision]);\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(\n    ([code, name]) => ({\n      id: code,\n      label: name,\n    })\n  );\n  const options = shippingOptions.map((sO) => ({\n    id: sO.id,\n    label: `${sO.description} - ${sO.price.formatted_with_symbol}`,\n  }));\n\n  return (\n    <>\n      <Typography variant={\"h6\"} gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              setShippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name={\"firstName\"} label={\"First Name\"} />\n            <FormInput name={\"lastName\"} label={\"Last Name\"} />\n            <FormInput name={\"address1\"} label={\"Address\"} />\n            <FormInput name={\"email\"} label={\"Email\"} />\n            <FormInput name={\"city\"} label={\"City\"} />\n            <FormInput name={\"zip\"} label={\"ZIP / Postal Code\"} />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {countries.map((country) => {\n                  return (\n                    <MenuItem key={country.id} value={country.id}>\n                      {country.label}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {subdivisions.map((subdivision) => {\n                  return (\n                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                      {subdivision.label}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {options.map((option) => {\n                  return (\n                    <MenuItem key={option.id} value={option.id}>\n                      {option.label}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button variant={\"outlined\"} component={Link} to={\"/cart\"}>\n              Back to Cart\n            </Button>\n            <Button type={\"submit\"} variant={\"contained\"} color={\"primary\"}>\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","C:\\Users\\User\\PhpstormProjects\\shope\\src\\components\\Checkout\\AddressForm\\FormInput.jsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"82","line":5,"column":18},{"ruleId":"83","severity":1,"message":"84","line":7,"column":3,"nodeType":"85","messageId":"86","endLine":7,"endColumn":7},{"ruleId":"83","severity":1,"message":"87","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":8,"endColumn":11},{"ruleId":"83","severity":1,"message":"88","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"83","severity":1,"message":"89","line":9,"column":3,"nodeType":"85","messageId":"86","endLine":9,"endColumn":10},{"ruleId":"83","severity":1,"message":"90","line":10,"column":3,"nodeType":"85","messageId":"86","endLine":10,"endColumn":9},{"ruleId":"83","severity":1,"message":"91","line":21,"column":10,"nodeType":"85","messageId":"86","endLine":21,"endColumn":22},{"ruleId":"83","severity":1,"message":"92","line":36,"column":9,"nodeType":"85","messageId":"86","endLine":36,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":55,"column":6,"nodeType":"95","endLine":55,"endColumn":8,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":71,"column":6,"nodeType":"95","endLine":71,"endColumn":27,"suggestions":"98"},"Parsing error: Unexpected token\n\n  3 | import App from './App'\n  4 | \n> 5 | ReactDOM.render(</App>,document.getElementById('root'))\n    |                  ^\n  6 |","no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'shippingData' is assigned a value but never used.","'backStep' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["100"],{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"105","text":"106"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"107","text":"108"},[1710,1712],"[checkoutToken.id]",[2015,2036],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]