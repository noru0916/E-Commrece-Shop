{
  "version": 3,
  "sources": [
    "lib/commerce.js",
    "components/NavBar/styles.js",
    "assests/commerse.jfif",
    "components/NavBar/NavBar.jsx",
    "components/Products/Product/styles.js",
    "components/Products/Product/Product.jsx",
    "components/Products/styles.js",
    "components/Products/Products.jsx",
    "components/Cart/styles.js",
    "components/Cart/CartItem/styles.js",
    "components/Cart/CartItem/CartItem.jsx",
    "components/Cart/Cart.jsx",
    "components/Checkout/styles.js",
    "components/Checkout/PaymentForm/Review/Review.jsx",
    "components/Checkout/PaymentForm/PaymentForm.jsx",
    "components/Checkout/AddressForm/FormInput.jsx",
    "components/Checkout/AddressForm/AddressForm.jsx",
    "components/Checkout/Checkout.jsx",
    "App.jsx",
    "index.js"
  ],
  "names": [
    "commerce",
    "Commerce",
    "process",
    "makeStyles",
    "theme",
    "appBar",
    "boxShadow",
    "borderBottom",
    "breakpoints",
    "up",
    "width",
    "marginLeft",
    "title",
    "flexGrow",
    "alignItems",
    "display",
    "textDecoration",
    "image",
    "marginRight",
    "menuButton",
    "spacing",
    "grow",
    "search",
    "position",
    "borderRadius",
    "shape",
    "backgroundColor",
    "fade",
    "palette",
    "common",
    "white",
    "searchIcon",
    "padding",
    "height",
    "pointerEvents",
    "justifyContent",
    "inputRoot",
    "color",
    "inputInput",
    "paddingLeft",
    "transition",
    "transitions",
    "create",
    "NavBar",
    "totalItems",
    "classes",
    "useStyles",
    "location",
    "useLocation",
    "AppBar",
    "className",
    "Toolbar",
    "Typography",
    "variant",
    "component",
    "Link",
    "to",
    "src",
    "logo",
    "alt",
    "pathname",
    "button",
    "IconButton",
    "aria-label",
    "Badge",
    "badgeContent",
    "ShoppingCart",
    "root",
    "maxWidth",
    "media",
    "paddingTop",
    "cardActions",
    "cardContent",
    "Product",
    "product",
    "onAddToCart",
    "Card",
    "CardMedia",
    "source",
    "name",
    "CardContent",
    "gutterBottom",
    "price",
    "formatted_with_symbol",
    "dangerouslySetInnerHTML",
    "__html",
    "description",
    "CardActions",
    "disableSpacing",
    "onClick",
    "id",
    "AddShoppingCart",
    "toolbar",
    "mixins",
    "content",
    "background",
    "default",
    "Products",
    "products",
    "console",
    "log",
    "Grid",
    "container",
    "justify",
    "length",
    "map",
    "item",
    "xs",
    "sm",
    "md",
    "lg",
    "marginTop",
    "emptyButton",
    "minWidth",
    "down",
    "marginBottom",
    "checkoutButton",
    "link",
    "cardDetails",
    "cartActions",
    "buttons",
    "CartItem",
    "handleUpdateCartQty",
    "handleRemoveFromCart",
    "line_totalformatted_with_symbol",
    "Button",
    "type",
    "size",
    "quantity",
    "Cart",
    "cart",
    "handleEmptyCart",
    "EmptyCart",
    "FilledCart",
    "line_items",
    "subtotal",
    "Container",
    "layout",
    "paper",
    "stepper",
    "divider",
    "margin",
    "spinner",
    "Review",
    "checkoutToken",
    "List",
    "disablePadding",
    "live",
    "ListItem",
    "style",
    "ListItemText",
    "primary",
    "secondary",
    "line_total",
    "fontWeight",
    "stripePromise",
    "loadStripe",
    "PaymentForm",
    "shippingData",
    "backStep",
    "onCaptureCheckout",
    "nextStep",
    "timeout",
    "handleSubmit",
    "e",
    "elements",
    "stripe",
    "a",
    "preventDefault",
    "cardElement",
    "getElement",
    "CardElement",
    "createPaymentMethod",
    "card",
    "error",
    "paymentMethod",
    "orderData",
    "customer",
    "firstname",
    "firstName",
    "lastname",
    "lastName",
    "email",
    "shipping",
    "street",
    "adress1",
    "town_city",
    "city",
    "county_state",
    "shippingSubdivision",
    "postal_zip_code",
    "zip",
    "country",
    "shippingCountry",
    "fulfillment",
    "shipping_method",
    "shippingOption",
    "payment",
    "gateway",
    "payment_method_id",
    "Divider",
    "onSubmit",
    "disabled",
    "FormInput",
    "label",
    "control",
    "useFormContext",
    "defaultValue",
    "as",
    "TextField",
    "fullWidth",
    "required",
    "AddressForm",
    "next",
    "useState",
    "shippingCountries",
    "setShippingCountries",
    "setShippingCountry",
    "shippingSubdivisions",
    "setShippingSubdivisions",
    "setShippingSubdivision",
    "shippingOptions",
    "setShippingOptions",
    "setShippingOption",
    "methods",
    "useForm",
    "fetchShippingCountries",
    "checkoutTokenId",
    "services",
    "localeListShippingCountries",
    "countries",
    "Object",
    "keys",
    "fetchSubdivisions",
    "countryCode",
    "localeListSubdivisions",
    "subdivisions",
    "fetchShippingOptions",
    "region",
    "checkout",
    "getShippingOptions",
    "options",
    "useEffect",
    "entries",
    "sO",
    "data",
    "InputLabel",
    "Select",
    "value",
    "onChange",
    "target",
    "MenuItem",
    "subdivision",
    "option",
    "steps",
    "Checkout",
    "order",
    "activeStep",
    "setActiveStep",
    "setShippingData",
    "setCheckoutToken",
    "isFinished",
    "setIsFinished",
    "history",
    "useHistory",
    "generateToken",
    "token",
    "push",
    "prevActiveStep",
    "Form",
    "setTimeout",
    "Confirmation",
    "customer_reference",
    "CircularProgress",
    "CssBaseline",
    "Paper",
    "align",
    "Stepper",
    "step",
    "Step",
    "StepLabel",
    "Index",
    "setProducts",
    "setCart",
    "setOrder",
    "errorMessage",
    "setErrorMessage",
    "fetchProducts",
    "list",
    "fetchCard",
    "retrieve",
    "handleAddToCart",
    "productId",
    "add",
    "update",
    "remove",
    "empty",
    "refreshCart",
    "newCart",
    "handleCaptureCheckout",
    "newOrder",
    "capture",
    "incomingOrder",
    "message",
    "total_items",
    "exact",
    "path",
    "ReactDOM",
    "render",
    "App",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.c384700a.chunk.js",
  "sourcesContent": [
    "import Commerce from \"@chec/commerce.js\";\n\nexport const commerce = new Commerce(\n  process.env.REACT_APP_CHEC_PUBLIC_KEY,\n  true\n);\n",
    "import { makeStyles, fade } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 0;\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  title: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    display: \"flex\",\n    textDecoration: \"none\",\n  },\n  image: {\n    marginRight: \"10px\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n",
    "export default __webpack_public_path__ + \"static/media/commerse.b3701709.jfif\";",
    "import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Badge,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport logo from \"../../assests/commerse.jfif\";\n\nconst NavBar = ({ totalItems }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  return (\n    <>\n      <AppBar position={\"fixed\"} className={classes.appBar} color={\"inherit\"}>\n        <Toolbar>\n          <Typography\n            variant={\"h6\"}\n            className={classes.title}\n            color={\"inherit\"}\n            component={Link}\n            to={\"/\"}\n          >\n            <img\n              src={logo}\n              alt={\"Commerce.js\"}\n              height={\"25px\"}\n              className={classes.image}\n            />\n            Commerce.js\n          </Typography>\n          <div className={classes.grow} />\n          {location.pathname === \"/\" && (\n            <div className={classes.button}>\n              <IconButton\n                component={Link}\n                to={\"/cart\"}\n                aria-label={\"Show card items\"}\n                color={\"inherit\"}\n              >\n                <Badge badgeContent={totalItems} color={\"secondary\"}>\n                  <ShoppingCart />\n                </Badge>\n              </IconButton>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default NavBar;\n",
    "import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(() => ({\n  root: { maxWidth: \"100%\" },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  cardActions: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n",
    "import React from \"react\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport { AddShoppingCart } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\n\nconst Product = ({ product, onAddToCart }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={product.media.source}\n        title={product.name}\n      />\n      <CardContent>\n        <div className={classes.cardContent}>\n          <Typography variant={\"h2\"} gutterBottom>\n            {product.name}\n          </Typography>\n          <Typography variant={\"h2\"}>\n            {product.price.formatted_with_symbol}\n          </Typography>\n        </div>\n        <Typography\n          variant={\"h5\"}\n          color={\"textSecondary\"}\n          dangerouslySetInnerHTML={{ __html: product.description }}\n        />\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <IconButton\n          aria-label={\"Add to Card\"}\n          onClick={() => onAddToCart(product.id, 1)}\n        >\n          <AddShoppingCart />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Product;\n",
    "import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  root: {\n    flexGrow: 1,\n  },\n}));\n",
    "import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Product from \"./Product/Product\";\nimport useStyles from \"./styles\";\n\nconst Products = ({ products, onAddToCart }) => {\n  const classes = useStyles();\n  console.log(products);\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n      <Grid container justify={\"center\"} spacing={4}>\n        {products.length &&\n          products.map((product) => (\n            <Grid item key={product.id} xs={12} sm={6} md={4} lg={3}>\n              <Product product={product} onAddToCart={onAddToCart} />\n            </Grid>\n          ))}\n      </Grid>\n    </main>\n  );\n};\n\nexport default Products;\n",
    "import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  title: {\n    marginTop: \"5%\",\n  },\n  emptyButton: {\n    minWidth: \"150px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"5px\",\n    },\n    [theme.breakpoints.up(\"xs\")]: {\n      marginRight: \"20px\",\n    },\n  },\n  checkoutButton: {\n    minWidth: \"150px\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n  cardDetails: {\n    display: \"flex\",\n    marginTop: \"10%\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n  },\n}));\n",
    "import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  media: {\n    height: 260,\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cartActions: {\n    justifyContent: \"space-between\",\n  },\n  buttons: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n",
    "import React from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst CartItem = ({ item, handleUpdateCartQty, handleRemoveFromCart }) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardMedia\n        image={item.media.source}\n        alt={item.name}\n        className={classes.media}\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography variant={\"h4\"}>{item.name}</Typography>\n        <Typography variant={\"h5\"}>\n          {item.line_totalformatted_with_symbol}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <div className={classes.buttons}>\n          <Button\n            type={\"button\"}\n            size={\"small\"}\n            onClick={() => handleUpdateCartQty(item.id, item.quantity - 1)}\n          >\n            -\n          </Button>\n          <Typography>{item.quantity}</Typography>\n          <Button\n            type={\"button\"}\n            size={\"small\"}\n            onClick={() => handleUpdateCartQty(item.id, item.quantity + 1)}\n          >\n            +\n          </Button>\n        </div>\n        <Button\n          variant={\"contained\"}\n          type={\"button\"}\n          color={\"secondary\"}\n          onClick={() => handleRemoveFromCart(item.id)}\n        >\n          Remove\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default CartItem;\n",
    "import React from \"react\";\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport CartItem from \"./CartItem/CartItem\";\n\nconst Cart = ({\n  cart,\n  handleUpdateCartQty,\n  handleRemoveFromCart,\n  handleEmptyCart,\n}) => {\n  const classes = useStyles();\n  const EmptyCart = () => (\n    <Typography variant={\"subtitle1\"}>\n      You have no items in your shopping cart,{\" \"}\n      <Link to={\"/\"} className={classes.link}>\n        start adding some!\n      </Link>\n    </Typography>\n  );\n  const FilledCart = () => (\n    <>\n      <Grid container spacing={3}>\n        {cart.line_items.map((item) => (\n          <Grid item xs={12} sm={4} key={item.id}>\n            <CartItem\n              item={item}\n              handleUpdateCartQty={handleUpdateCartQty}\n              handleRemoveFromCart={handleRemoveFromCart}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <div className={classes.cardDetails}>\n        <Typography variant={\"h4\"}>\n          Subtotal: {cart.subtotal.formatted_with_symbol}\n        </Typography>\n        <div>\n          <Button\n            className={classes.emptyButton}\n            size={\"large\"}\n            type={\"button\"}\n            variant={\"contained\"}\n            color={\"secondary\"}\n            onClick={handleEmptyCart}\n          >\n            Empty Card\n          </Button>\n          <Button\n            className={classes.checkoutButton}\n            size={\"large\"}\n            type={\"button\"}\n            variant={\"contained\"}\n            color={\"primary\"}\n            component={Link}\n            to={\"/checkout\"}\n          >\n            Checkout\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n\n  if (!cart.line_items) return \"Loading...\";\n\n  return (\n    <Container>\n      <div className={classes.toolbar} />\n      <Typography className={classes.title} variant={\"h3\"} gutterBottom>\n        Your shopping card\n      </Typography>\n      {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\n    </Container>\n  );\n};\n\nexport default Cart;\n",
    "import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  toolbar: theme.mixins.toolbar,\n  layout: {\n    marginTop: \"5%\",\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginTop: 60,\n    },\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  divider: {\n    margin: \"20px 0\",\n  },\n  spinner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n",
    "import React from \"react\";\nimport { Typography, List, ListItem, ListItemText } from \"@material-ui/core\";\n\nconst Review = ({ checkoutToken }) => {\n  return (\n    <>\n      <Typography variant={\"h6\"} gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {checkoutToken.live.line_items.map((product) => (\n          <ListItem style={{ padding: \"10px 0\" }}>\n            <ListItemText\n              primary={product.name}\n              secondary={`Quantity: ${product.quantity}`}\n            />\n            <Typography variant={\"body2\"}>\n              {product.line_total.formatted_with_symbol}\n            </Typography>\n          </ListItem>\n        ))}\n        <ListItem style={{ padding: \"10px 0\" }}>\n          <ListItemText primary={`Total`} />\n          <Typography variant={\"subtitle1\"} style={{ fontWeight: 700 }}>\n            {checkoutToken.live.subtotal.formatted_with_symbol}\n          </Typography>\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport default Review;\n",
    "import React from \"react\";\nimport { Typography, Button, Divider } from \"@material-ui/core\";\nimport {\n  Elements,\n  CardElement,\n  ElementsConsumer,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js/pure\";\nimport Review from \"./Review/Review\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({\n  checkoutToken,\n  shippingData,\n  backStep,\n  onCaptureCheckout,\n  nextStep,\n  timeout,\n}) => {\n  const handleSubmit = async (e, elements, stripe) => {\n    e.preventDefault();\n    if (!stripe || !elements) return;\n\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n    });\n    if (error) {\n      console.log(error);\n    } else {\n      const orderData = {\n        line_items: checkoutToken.live.line_items,\n        customer: {\n          firstname: shippingData.firstName,\n          lastname: shippingData.lastName,\n          email: shippingData.email,\n        },\n        shipping: {\n          name: \"Primary\",\n          street: shippingData.adress1,\n          town_city: shippingData.city,\n          county_state: shippingData.shippingSubdivision,\n          postal_zip_code: shippingData.zip,\n          country: shippingData.shippingCountry,\n        },\n        fulfillment: { shipping_method: shippingData.shippingOption },\n        payment: {\n          gateway: \"stripe\",\n          stripe: {\n            payment_method_id: paymentMethod.id,\n          },\n        },\n      };\n      onCaptureCheckout(checkoutToken.id, orderData);\n\n      timeout();\n      nextStep();\n    }\n  };\n  return (\n    <>\n      <Review checkoutToken={checkoutToken} />\n      <Divider />\n      <Typography variant={\"h6\"} gutterBottom style={{ margin: \"20px 0\" }}>\n        Payment Method\n      </Typography>\n      <Elements stripe={stripePromise}>\n        <ElementsConsumer>\n          {({ elements, stripe }) => (\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n              <CardElement />\n              <br />\n              <br />\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Button variant={\"outlined\"} onClick={backStep}>\n                  Back\n                </Button>\n                <Button\n                  type={\"submit\"}\n                  variant={\"contained\"}\n                  disabled={!stripe}\n                  color={\"primary\"}\n                >\n                  Pay {checkoutToken.live.subtotal.formatted_with_symbol}\n                </Button>\n              </div>\n            </form>\n          )}\n        </ElementsConsumer>\n      </Elements>\n    </>\n  );\n};\n\nexport default PaymentForm;\n",
    "import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport { useFormContext, Controller } from \"react-hook-form\";\n\nconst FormInput = ({ name, label }) => {\n  const { control } = useFormContext();\n  return (\n    <Grid item xs={12} sm={6}>\n      <Controller\n        defaultValue={\"\"}\n        as={TextField}\n        name={name}\n        control={control}\n        fullWidth\n        label={label}\n        required\n      />\n    </Grid>\n  );\n};\n\nexport default FormInput;\n",
    "import React, { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { commerce } from \"../../../lib/commerce\";\nimport FormInput from \"./FormInput\";\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region }\n    );\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) {\n      fetchSubdivisions(shippingCountry);\n    }\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) {\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n    }\n  }, [shippingSubdivision]);\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(\n    ([code, name]) => ({\n      id: code,\n      label: name,\n    })\n  );\n  const options = shippingOptions.map((sO) => ({\n    id: sO.id,\n    label: `${sO.description} - ${sO.price.formatted_with_symbol}`,\n  }));\n\n  return (\n    <>\n      <Typography variant={\"h6\"} gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              setShippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name={\"firstName\"} label={\"First Name\"} />\n            <FormInput name={\"lastName\"} label={\"Last Name\"} />\n            <FormInput name={\"address1\"} label={\"Address\"} />\n            <FormInput name={\"email\"} label={\"Email\"} />\n            <FormInput name={\"city\"} label={\"City\"} />\n            <FormInput name={\"zip\"} label={\"ZIP / Postal Code\"} />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {countries.map((country) => {\n                  return (\n                    <MenuItem key={country.id} value={country.id}>\n                      {country.label}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {subdivisions.map((subdivision) => {\n                  return (\n                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                      {subdivision.label}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {options.map((option) => {\n                  return (\n                    <MenuItem key={option.id} value={option.id}>\n                      {option.label}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button variant={\"outlined\"} component={Link} to={\"/cart\"}>\n              Back to Cart\n            </Button>\n            <Button type={\"submit\"} variant={\"contained\"} color={\"primary\"}>\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n",
    "import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  CircularProgress,\n  Divider,\n  Button,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport { commerce } from \"../../lib/commerce\";\nimport useStyles from \"./styles\";\nimport PaymentForm from \"./PaymentForm/PaymentForm\";\nimport AddressForm from \"./AddressForm/AddressForm\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst steps = [\"Shipping address\", \"Payment details\"];\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [isFinished, setIsFinished] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const generateToken = async () => {\n      try {\n        const token = await commerce.checkout.generateToken(cart.id, {\n          type: \"cart\",\n        });\n        setCheckoutToken(token);\n      } catch (e) {\n        history.push(\"/\");\n      }\n    };\n    generateToken();\n  }, [cart, history]);\n  const classes = useStyles();\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  const next = (data) => {\n    setShippingData(data);\n    nextStep();\n  };\n  const Form = () =>\n    activeStep === 0 ? (\n      <AddressForm checkoutToken={checkoutToken} next={next} />\n    ) : (\n      <PaymentForm\n        shippingData={shippingData}\n        checkoutToken={checkoutToken}\n        backStep={backStep}\n        onCaptureCheckout={onCaptureCheckout}\n        nextStep={nextStep}\n        timeout={timeout}\n      />\n    );\n\n  const timeout = () => {\n    setTimeout(() => {\n      setIsFinished(true);\n    }, 3000);\n  };\n\n  let Confirmation = () =>\n    order.customer ? (\n      <>\n        <div>\n          <Typography variant={\"h5\"}>\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\n            {order.customer.lastname}\n          </Typography>\n          <Divider className={classes.divider} />\n          <Typography variant={\"subtitle2\"}>\n            Order ref: {order.customer_reference}\n          </Typography>\n          <br />\n          <Button\n            component={Link}\n            to={\"/\"}\n            variant={\"outlined\"}\n            type={\"button\"}\n          >\n            {\" \"}\n            Back to Home\n          </Button>\n        </div>\n      </>\n    ) : isFinished ? (\n      <>\n        <div>\n          <Typography variant={\"h5\"}>Thank you for your purchase</Typography>\n          <Divider className={classes.divider} />\n          <br />\n          <Button\n            component={Link}\n            to={\"/\"}\n            variant={\"outlined\"}\n            type={\"button\"}\n          >\n            {\" \"}\n            Back to Home\n          </Button>\n        </div>\n      </>\n    ) : (\n      <div className={classes.spinner}>\n        <CircularProgress />\n      </div>\n    );\n  if (error) {\n    Confirmation = () => (\n      <>\n        {\" \"}\n        <Typography variant={\"h5\"}>Error:{error}</Typography>\n        <br />\n        <Button component={Link} to={\"/\"} variant={\"outlined\"} type={\"button\"}>\n          {\" \"}\n          Back to Home\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant={\"h4\"} align={\"center\"}>\n            Checkout\n          </Typography>\n          <Stepper activeStep={0} className={classes.stepper}>\n            {steps.map((step) => (\n              <Step key={step}>\n                <StepLabel>{step}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <Confirmation />\n          ) : (\n            checkoutToken && <Form />\n          )}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { commerce } from \"./lib/commerce\";\nimport { Products, NavBar, Cart, Checkout } from \"./components\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nconst Index = () => {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const fetchProducts = async () => {\n    const { data } = await commerce.products.list();\n    setProducts(data);\n  };\n\n  const fetchCard = async () => {\n    setCart(await commerce.cart.retrieve());\n  };\n\n  const handleAddToCart = async (productId, quantity) => {\n    const { cart } = await commerce.cart.add(productId, quantity);\n    setCart(cart);\n  };\n\n  const handleUpdateCartQty = async (productId, quantity) => {\n    const { cart } = await commerce.cart.update(productId, { quantity });\n    setCart(cart);\n  };\n\n  const handleRemoveFromCart = async (productId) => {\n    const { cart } = await commerce.cart.remove(productId);\n    setCart(cart);\n  };\n\n  const handleEmptyCart = async () => {\n    const { cart } = await commerce.cart.empty();\n    setCart(cart);\n  };\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.empty();\n    setCart(newCart);\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(\n        checkoutTokenId,\n        newOrder\n      );\n      setOrder(incomingOrder);\n      await refreshCart();\n    } catch (e) {\n      setErrorMessage(e.data.error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCard();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div>\n        <NavBar totalItems={cart.total_items} />\n        <Switch>\n          <Route exact path={\"/\"}>\n            <Products products={products} onAddToCart={handleAddToCart} />\n          </Route>\n          <Route exact path={\"/cart\"}>\n            <Cart\n              cart={cart}\n              handleUpdateCartQty={handleUpdateCartQty}\n              handleRemoveFromCart={handleRemoveFromCart}\n              handleEmptyCart={handleEmptyCart}\n            />\n          </Route>\n          <Route exact path={\"/checkout\"}>\n            <Checkout\n              cart={cart}\n              order={order}\n              onCaptureCheckout={handleCaptureCheckout}\n              error={errorMessage}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default Index;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"
  ],
  "sourceRoot": ""
}
